"""
Предприятие производит оптовую закупку некоторых изделий A и B, на которую выделена определённая сумма денег. У поставщика есть в наличии партии этих изделий различных модификаций по различной цене. На выделенные деньги необходимо приобрести как можно больше изделий B независимо от модификации. Если у поставщика закончатся изделия B, то на оставшиеся деньги необходимо приобрести как можно больше изделий A. Известны выделенная для закупки сумма, а также количество и цена различных модификаций данных изделий у поставщика. Необходимо определить, сколько будет закуплено изделий A и какая сумма останется неиспользованной.

Первая строка входного файла содержит два целых числа: N — общее количество партий изделий у поставщика и M — сумма выделенных на закупку денег (в рублях). Каждая из следующих N строк описывает одну партию и содержит два целых числа (цена одного изделия в рублях и количество изделий в партии) и один символ (латинская буква A или B), определяющий тип изделия. Все данные в строках входного файла отделены одним пробелом.

В ответе запишите два целых числа: сначала количество закупленных изделий типа A, затем оставшуюся неиспользованной сумму денег.

Пример входного файла:

4 1000
30 8 A
50 12 B
40 14 A
20 10 B
"""
with open('26 (3).txt') as file:
    n, m = map(int, file.readline().split())
    temp = (elem.strip("\n").split() for elem in file.readlines())
    data = [(int(elem[0]), int(elem[1]), elem[2]) for elem in temp]

list_A = []
list_B = []
for i in range(len(data)):
    if data[i][2] == "A":
        list_A.append(data[i])
    else:
        list_B.append(data[i])

list_A.sort(key=lambda x: x[0])
list_B.sort(key=lambda x: x[0])

summ = 0
for i in range(len(list_B)):
    for j in range(list_B[i][1]):
        if summ + list_B[i][0] <= m:
            summ += list_B[i][0]
        else:
            break

count_A = 0
for i in range(len(list_A)):
    for j in range(list_A[i][1]):
        if summ + list_A[i][0] <= m:
            summ += list_A[i][0]
            count_A += 1
        else:
            break

print(count_A, m - summ)
