"""
По каналу связи передавалась последовательность положительных целых чисел, все числа не превышают 1000. Количество чисел известно. Затем передаётся контрольное значение последовательности — наибольшее число R, удовлетворяющее следующим условиям:

1) R — произведение двух различных переданных элементов последовательности («различные» означает, что не рассматриваются квадраты переданных чисел, произведения различных элементов последовательности, равных по величине, допускаются);

2) R делится на 14.

Если такого числа R нет, то контрольное значение полагается равным 0. В результате помех при передаче как сами числа, так и контрольное значение могут быть искажены.



Программа должна напечатать одно число — вычисленное контрольное значение, соответствующую условиям задачи.



Входные данные.

Файл A

Файл B

Даны два входных файла (файл A и файл B), каждый из которых содержит в первой строке количество чисел N (1≤N≤100000). В каждой из последующих N строк записано одно натуральное число, не превышающее 1000.

Пример организации исходных данных во входном файле:

6

77

14

7

9

499

100

Пример выходных данных для приведённого выше примера входных данных:

7700

В ответе укажите два числа: сначала значение искомое контрольное значение для файла А, затем для файла B.
"""


def answer_for(content):
    with open(content) as f:
        N = int(f.readline())
        numbers = list(map(int, f.read().split()))

        divisor_2 = 0  # наибольшее число, кратное 2
        divisor_7 = 0  # наибольшее число, кратное 7
        divisor_14 = 0  # наибольшее число, кратное 14
        max_number = 0  # наибольшее число, удовлетворяющее одному из вышеуказанных условий
        for number in numbers:
            if number % 2 == 0 and number % 7 != 0 and number > divisor_2:
                divisor_2 = number
            elif number % 2 != 0 and number % 7 == 0 and number > divisor_7:
                divisor_7 = number
            elif number % 14 == 0 and number > divisor_14:
                divisor_14 = number
            if number > max_number:
                max_number = number

        multiply_1 = divisor_2 * divisor_7
        multiply_2 = divisor_14 * max_number
        if multiply_1 < multiply_2:
            print(multiply_2)
        else:
            print(multiply_1)


answer_for("27985_A.txt")
answer_for("27985_B.txt")
