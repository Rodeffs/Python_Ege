"""
В текстовом файле записан набор натуральных чисел, не превышающих 108. Гарантируется, что все числа различны. Из набора нужно выбрать три числа, сумма которых делится на 3. Какую наименьшую сумму можно при этом получить?

Входные данные.

Файл A

Файл B

Первая строка входного файла содержит целое число N — общее количество чисел в наборе. Каждая из следующих N строк содержит одно число.

Пример входного файла:

4

5

8

14

11

В данном случае есть четыре подходящие тройки: 5, 8, 11 (сумма 24); 5, 8, 14 (сумма 27); 5, 14 11 (сумма 30) и 8, 14, 11 (сумма 33). В ответе надо записать число 24.

Вам даны два входных файла (A и B), каждый из которых имеет описанную выше структуру. В ответе укажите два числа: сначала значение искомой суммы для файла A, затем для файла B.

"""
with open("27-B.txt") as f:
    f.readline()
    numbers = list(map(int, f.read().split()))

m0 = []  # Числа, кратные 3
m1 = []  # Числа, дающие остаток 1 при делении на 3
m2 = []  # Числа, дающие остаток 2 при делении на 3

for i in numbers:
    if i % 3 == 0:
        m0.append(i)

    elif i % 3 == 1:
        m1.append(i)

    elif i % 3 == 2:
        m2.append(i)

m0.sort()
m1.sort()
m2.sort()
# Это чтобы сразу возвращать три наименьших числа, т.к. они будут отсортированы и можно просто вернуть три первых значения

sum1 = m0[0] + m0[1] + m0[2]  # Сумма трёх наименьших чисел, кратных 3
sum2 = m1[0] + m1[1] + m1[2]  # Сумма трёх наименьших чисел, дающих остаток 1 при делении на 3
sum3 = m2[0] + m2[1] + m2[2]  # Сумма трёх наименьших чисел, дающих остаток 2 при делении на 3
sum4 = m0[0] + m1[0] + m2[0]  # Сумма трёх наименьших чисел: кратное 3, дающие остаток 1 и остаток 2

if min(sum1, sum2, sum3, sum4) == sum1:
    print(sum1)
elif min(sum1, sum2, sum3, sum4) == sum2:
    print(sum2)
elif min(sum1, sum2, sum3, sum4) == sum3:
    print(sum3)
elif min(sum1, sum2, sum3, sum4) == sum4:
    print(sum4)

