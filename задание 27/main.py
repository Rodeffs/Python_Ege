"""
На каждом 3-м километре кольцевой автодороги с двусторонним движением установлены контейнеры для мусора. Длина кольцевой автодороги равна 3N километров. Нулевой километр и 3N-й километр автодороги находятся в одной точке. Известно количество мусора, которое накапливается ежедневно в каждом из контейнеров. Из каждого пункта мусор вывозит отдельный мусоровоз. Стоимость доставки мусора вычисляется как произведение количества мусора на расстояние от пункта до центра переработки. Центр переработки отходов открыли в одном из пунктов сбора мусора таким образом, чтобы общая стоимость доставки мусора из всех пунктов в этот центр была минимальной.

Определите минимальные расходы на доставку мусора в центр переработки отходов.

Входные данные

27_A.txt

27_B.txt

Дано два входных файла (файл A и файл B), каждый из которых в первой строке содержит число N (1≤N≤10 000 000) — количество пунктов сбора мусора на кольцевой автодороге. В каждой из следующих N строк находится число — количество мусора в контейнере (все числа натуральные, количество мусора в каждом пункте не превышает 1000). Числа указаны в порядке расположения контейнеров на автомагистрали, начиная с первого километра.

В ответе укажите два числа: сначала значение искомой величины для файла А, затем — для файла B.

Типовой пример организации данных во входном файле

6

8

20

5

13

7

19

При таких исходных данных, если контейнеры установлены на каждом километре автодороги, необходимо открыть центр переработки в пункте 6. В этом случае сумма транспортных затрат составит: 1·7+0·19+1·8+2·20+3·5+2·13.

Типовой пример имеет иллюстративный характер. Для выполнения задания используйте данные из прилагаемых файлов.

Предупреждение: для обработки файла B не следует использовать переборный алгоритм, вычисляющий сумму для всех возможных вариантов, поскольку написанная по такому алгоритму программа будет выполняться слишком долго.
"""


def distance(a, b):
    res = abs(a - b)
    return res if res < N // 2 else N - res
    # Вычисляем расстояние от пункта до другого пункта:
    # N - сколько всего пунктов,
    # a - от какого пункта считаем,
    # b - до какого пункта считаем.
    # Данное значение берём в модуль, т.к. нам нужно расстояние
    # Номер пункта считаем от начала, как в примере


def content():
    with open("107_27_A.txt", 'r', encoding='UTF-8') as file:
        N = int(file.readline())
        L = list(map(int, file.read().split()))
    return N, L
    # Читаем файл, берём значения N и L


def get_cost(t, ls):
    sum = 0
    for i in range(len(ls)):
        sum += distance(t, i) * ls[i]
    return sum
    # Вычисление стоимости доставки, исходя из условия


N, L = content()
cost_list = [get_cost(i, L) for i in range(N)]

print(min(cost_list))  # Ответ для пункта А

"""-----------------------------------------------------------------------------------------------------------"""

with open("107_27_B.txt") as f:
    N1 = int(f.readline())
    L1 = list(map(int, f.read().split()))

sum1 = 0
leftsum = 0
rightsum = 0

for i in range(1, N1 // 2):
    sum1 += L1[i] * i + L1[N1 - i] * i
    leftsum += L1[N1 - i]
    rightsum += L1[i]

index_mid = N1 // 2
sum1 += L1[index_mid] * index_mid

answer = [0] * N1
answer[0] = sum1

for i in range(1, N1):
    answer[i] = answer[i - 1] + leftsum + L1[i - 1] - rightsum - L1[i + index_mid % N1]
    rightsum += -L1[i] + L1[(i + index_mid) % N1]
    leftsum += -L[(i + index_mid) % N1]