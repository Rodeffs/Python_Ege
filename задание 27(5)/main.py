"""
Имеется набор данных, состоящий из троек положительных целых чисел. Необходимо выбрать из каждой тройки ровно одно число так, чтобы сумма всех выбранных чисел не делилась на k=109 и при этом была максимально возможной. Гарантируется, что искомую сумму получить можно. Программа должна напечатать одно число — максимально возможную сумму, соответствующую условиям задачи.

Входные данные.

Файл A

Файл B

Даны два входных файла (файл A и файл B), каждый из которых содержит в первой строке количество троек N (1≤N≤1000000). Каждая из следующих N строк содержит три натуральных числа, не превышающих 20000.

Пример организации исходных данных во входном файле:

6

1 3 7

5 12 6

6 9 11

5 4 8

3 5 4

1 1 1

Для указанных входных данных, в случае, если k=5, значением искомой суммы является число 44.

В ответе укажите два числа: сначала значение искомой суммы для файла А,
"""
with open("27_B (1).txt") as file:
    file.readline()
    numbers = [list(map(int, line.strip().split())) for line in file.readlines()]

max_sum = 0
min_dif = 9999999999999
for trio in numbers:
    x, y, z = trio

    # Если x - максимальное число
    if x >= y and x >= z:
        max_sum += x
        if abs(x - y) < min_dif and abs(x - y) % 109 != 0:
            min_dif = abs(x - y)
        if abs(x - z) < min_dif and abs(x - y) % 109 != 0:
            min_dif = abs(x - z)

    # Если y - максимальное число
    elif y >= x and y >= z:
        max_sum += y
        if abs(y - x) < min_dif and abs(y - x) % 109 != 0:
            min_dif = abs(y - x)
        if abs(y - z) < min_dif and abs(y - z) % 109 != 0:
            min_dif = abs(y - z)

    # Если z - максимальное число
    elif z >= y and z >= x:
        max_sum += z
        if abs(z - y) < min_dif and abs(z - y) % 109 != 0:
            min_dif = abs(z - y)
        if abs(z - x) < min_dif and abs(z - x) % 109 != 0:
            min_dif = abs(z - x)

if max_sum % 109 != 0:
    print(max_sum)
else:
    print(max_sum - min_dif)
